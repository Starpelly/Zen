namespace Raylib;

cembed("""
#include <C:/Users/Braedon/Downloads/raylib-master/raylib-master/src/raylib.h>
""");

public fun void InitWindow(let int width, let int height, let string_view title)
{
    // cembed("InitWindow(@param(width), @param(height), @param(title));");
    cembed("InitWindow(width, height, title);");
}

public fun void SetTargetFPS(let int fps)
{
    cembed("SetTargetFPS(fps);");
}

public fun bool WindowShouldClose()
{
    cembed("return WindowShouldClose();");
}

public fun void CloseWindow()
{
    cembed("CloseWindow();");
}

public fun void BeginDrawing()
{
    cembed("BeginDrawing();");
}

public fun void EndDrawing()
{
    cembed("EndDrawing();");  
}

public fun void ClearBackground(let Color color)
{
    cembed("ClearBackground(CLITERAL(Color){ color.r, color.g, color.b, color.a } );");
}

public fun void DrawText(let string_view text, let int x, let int y, let int font_size, let Color color)
{
    cembed("DrawText(text, x, y, font_size, CLITERAL(Color){ color.r, color.g, color.b, color.a });");
}

public fun void DrawRectangleV(let Vector2 position, let Vector2 size, let Color color)
{
    cembed("""
    const Vector2 pos = CLITERAL(Vector2) { position.x, position.y };
    const Vector2 sizee = CLITERAL(Vector2) { size.x, size.y };
    const Color colorr = CLITERAL(Color){ color.r, color.g, color.b, color.a };
    DrawRectangleV(pos, sizee, colorr);
    """);
}

public fun bool IsMouseButtonDown(let int button)
{
    cembed("""
    return IsMouseButtonDown(button);
    """);
}
